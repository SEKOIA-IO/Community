[
    {
        "file": "email_notification_on_alert_webhook.json",
        "name": "Mail Webhook notification on alert",
        "description": "Send an email about an alert when receiving a webhook event",
        "tags": [
            "alerts",
            "notifications",
            "webhook"
        ],
        "workspace": ["Operation Center"]
    },
    {
        "file": "mattermost_notification_on_alert.json",
        "name": "Mattermost notification on alert",
        "description": "Notify by mattermost when new alerts are created",
        "tags": [
            "alerts",
            "notifications"
        ],
        "workspace": ["Operation Center"]
    },
    {
        "file": "alert_webhook_internet_scan.json",
        "name": "Qualify Internet Scan webhook",
        "description": "Qualify an Internet scan alert on webhook",
        "tags": [
            "alerts",
            "webhook"
        ],
        "workspace": ["Operation Center"]
    },
    {
        "file": "playbook_adware.json",
        "name": "Playbook adware",
        "description": "Automatic validation of alerts with predefined adware domains",
        "tags": [
            "alerts"
        ],
        "workspace": ["Operation Center"]
    },
    {
        "file": "urgency_to_0_on_rejected.json",
        "name": "Alert urgency to 0 when rejected",
        "description": "Put the urgency of an alert to 0 when it is rejected",
        "tags": [
            "alerts"
        ],
        "workspace": ["Operation Center"]
    },
    {
        "file": "VirusTotal_Enrichement.json",
        "name": "Enhance network alerts with VirusTotal",
        "description": "Enhance network alerts with VirusTotal informations (Only for IP-v4, domain-name, and url)",
        "tags": [
            "alerts",
            "enrichment"
        ],
        "workspace": ["Operation Center"]
    },
    {
        "file": "Enrich_alerts_with_VirusTotal_Hash.json",
        "name": "Scan for hash on VirusTotal",
        "workspace": ["Operation Center"],
        "description": "Enrich to check if this file.hash.sha1 is known from VirusTotal, directly from SEKOIA.IO.",
        "tags": ["alerts", "enrichement"]
    },
    {
        "file": "Reject_old_alerts.json",
        "name": "Reject old alerts (1 year)",
        "description": "Reject old alerts not updated for 1 year.",
        "tags": [
            "alerts",
            "cron"
        ],
        "workspace": ["Operation Center"]
    },
    {
        "file": "Enrich_with_IKnow_What_You_Download.json",
        "name": "Enrich with IKnowWhatYouDownload",
        "description": "Enrich with IKnowWhatYouDownload to check if the IP is known from this service, directly from SEKOIA.IO.",
        "tags": [
            "alerts",
            "webhook",
            "enrichment"
        ],
        "workspace": ["Operation Center"]
    },
    {
        "file": "Shodan_search_to_observables.json",
        "name": "Shodan search to observables",
        "workspace": ["Intelligence Center"],
        "description": "Get IP addresses from a shodan search and add it to Observable data base with a tag",
        "tags": [
          "observable",
          "shodan",
          "TIP"
        ]
    },
    {
        "file": "OSINT_to_observables.json",
        "name": "Generic Fetch OSINT to observable",
        "workspace": ["Intelligence Center"],
        "description": "Retrieve observables from an OSINT to add it to observable database with a tag (eg: https://github.com/MISP/misp-warninglists/tree/main/lists)",
        "tags": [
            "observable",
            "fetch osint",
            "TIP"
        ]
    },
    {
        "file": "create_alert_on_the_hive_automatic.json",
        "name": "Automatically create an alert on TheHive",
        "workspace": ["Operation Center"],
        "description": "Automatically create an alert on TheHive when a new alert is raised in SEKOIA.IO.",
        "tags": ["alerts", "thehive"]
    },
    {
        "file": "create_alert_on_the_hive_manual.json",
        "name": "Manually create an Alert on TheHive",
        "workspace": ["Operation Center"],
        "description": "Create an alert on TheHive via the alert page.",
        "tags": ["alerts", "thehive"]
    },
    {
        "file": "DigitalShadows_SearchLight_fetch_alerts.json",
        "name": "Fetch alerts from Digital Shadows SearchLight",
        "workspace": ["Operation Center"],
        "description": "Synchronise alerts from Digital Shadows SearchLight to SEKOIA.IO events",
        "tags": [
          "alerts",
          "osint"
        ]
    },
    {
        "file": "forward_panda_security_events.json",
        "name": "Forward Panda Security Events to SEKOIA.IO",
        "workspace": [
            "Operation Center"
        ],
        "description": "This playbook pulls security events from the Panda Security Aether platform then push them to SEKOIA.IO",
        "tags": [
            "events"
        ]
    },
    {
        "file": "imperva_waf_fetch_logs.json",
        "name": "Imperva WAF fetch logs",
        "workspace": ["Operation Center"],
        "description": "Fetch events from Imperva Web Application Firewall and forward them to SEKOIA.IO intake",
        "tags": ["events"]
    },
    {
        "file": "forward_vadesecure_records.json",
        "name": "Forward Vade M365 email Events to SEKOIA.IO",
        "workspace": ["Operation Center"],
        "description": "This playbook collect logs from 'Vade for M365' then push them to SEKOIA.IO",
        "tags": ["events"]
    },
    {
        "file": "Tranco_top_domains_to_observables.json",
        "name": "Tranco top domains to observables",
        "workspace": ["Intelligence Center"],
        "tags": [
            "observables",
            "tranco",
            "TIP"
         ],
         "description": "Automatically import Tranco's top 1 000 000 domain names to observable database"
    },
    {
        "file": "forward_google_pubsub_events.json",
        "name": "Forward Google Pubsub records to SEKOIA.IO",
        "workspace": ["Operation Center"],
        "description": "This playbook consumes records from Google Pubsub and push them to SEKOIA.IO",
        "tags": ["google", "events"]
    },
    {
        "file": "Enrich_alerts_with_AbuseIPDB.json",
        "name": "Enrich alerts with AbuseIPDB",
        "workspace": ["Operation Center"],
        "description": "Enrich with AbuseIPDB to check if the IP is known from this service, directly from SEKOIA.IO.",
        "tags": ["alerts", "enrichment"]
    },
    {
        "file": "Alerts_Shodan_Enrichment.json",
        "name": "Enrich with Shodan",
        "workspace": ["Operation Center"],
        "description": "Enrich with Shodan to check if the IP is known from this service, directly from SEKOIA.IO.",
        "tags": ["alerts", "enrichment"]
    },
    {
        "file": "slack_notification_on_alert.json",
        "name": "Slack notification on alert",
        "description": "Notify by Slack when new alerts are created. If the target is defined, it is used in the notification, otherwise the hostnames from events are used.",
        "tags": [
            "alerts",
            "notifications"
        ],
        "workspace": ["Operation Center"]
    },
    {
        "file": "get_data_and_enrich_with_cloudflare.json",
        "name": "Get data from OSINT and enrich DNS names with cloudflare DNS over HTTPs API",
        "description": "Playbook to get data from OSINT and enrich it with CloudFlare DNS over HTTPs API. The playbook then upload observables to database.\n\nPlease configure 'Fetch Osint' node and 'Get domains from Fetch OSINT' jpath to get domains.",
        "tags": ["observable", "cloudflare", "fetch osint", "enrich","TIP"],
        "workspace": ["Intelligence Center"]
    }
]
